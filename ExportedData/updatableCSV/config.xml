<?xml version="1.0"?>
<!--
  ~ Copyright (C) 2010-2021 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<!--
Configuration key-value can be added or overridden using -Dkey=value JVM argument.
Key is a path to element, starting at "midpoint", separated with "." - for example:
-Dmidpoint.repository.asServer=false
or
-Dmidpoint.profilingEnabled=true
See more: https://wiki.evolveum.com/display/midPoint/Overriding+config.xml+parameters

It is also possible to read values from file - to do so:
- use "_FILE" suffix for key element, e.g. keyStorePassword_FILE
- specify path to the file as its value
- subsequently, value of key without the _FILE suffix will be set to the content of the file
Notes:
- The content of the file will be used as-is, including any newlines, including trailing ones.
- If the file is missing error is logged, but the startup continues (value will be null).
- Relative paths are resolved from current working directory, better specify absolute path or
  start with "${midpoint.home}" (without quotes) can also be used and will be resolved.
  (Please use / to separate it from the rest of the path, because while it internally ends
  with / now, this behaviour will likely change later.)
Example (from under midpoint/keystore element):
<keyStorePassword_FILE>${midpoint.home}/keystore.pass</keyStorePassword_FILE>

The _FILE feature is not to be confused with elements like <keyStorePath> where the path
to a file, not its content, is the actual value.
-->
<configuration>
    <midpoint>
        <webApplication>
            <importFolder>${midpoint.home}/import</importFolder>
        </webApplication>
        <repository>
            <repositoryServiceFactoryClass>com.evolveum.midpoint.repo.sql.SqlRepositoryFactory</repositoryServiceFactoryClass>
            <baseDir>${midpoint.home}</baseDir>
            <asServer>true</asServer>
        </repository>
        <audit>
            <auditService>
                <auditServiceFactoryClass>com.evolveum.midpoint.audit.impl.LoggerAuditServiceFactory</auditServiceFactoryClass>
            </auditService>
            <auditService>
                <auditServiceFactoryClass>com.evolveum.midpoint.repo.sql.SqlAuditServiceFactory</auditServiceFactoryClass>
            </auditService>
        </audit>
        <icf>
            <scanClasspath>true</scanClasspath>
            <scanDirectory>${midpoint.home}/icf-connectors</scanDirectory>
        </icf>
        <keystore>
            <keyStorePath>${midpoint.home}/keystore.jceks</keyStorePath>
            <keyStorePassword>changeit</keyStorePassword>
            <encryptionKeyAlias>default</encryptionKeyAlias>
            <!--
            You can use smaller cipher key size for encryption. For:
            AES_128 "http://www.w3.org/2001/04/xmlenc#aes128-cbc";
            AES_256 "http://www.w3.org/2001/04/xmlenc#aes256-cbc";
            AES_192 "http://www.w3.org/2001/04/xmlenc#aes192-cbc";

            in element <xmlCipher></xmlCipher>
            By default AES_128 is used. If you change key size, than
            you must also create secret key in key store with proper key size and change encryptionKeyAlias.

            To generate keystore with keytool use command:
            keytool -genseckey -alias default -keystore keystore.jceks -storetype jceks -keyalg AES -keysize 128

            secret key password is by default 'midpoint'
            -->
        </keystore>
        <!-- <profilingEnabled>true</profilingEnabled> -->
    </midpoint>
</configuration>
